krylov/co-gmres.c:   cogmres_functions->CAlloc = CAlloc;
krylov/co-gmres.c:   cogmres_functions->Free = Free;
krylov/co-gmres.c:   cogmres_functions->CommInfo = CommInfo; /* not in PCGFunctionsCreate */
krylov/co-gmres.c:   cogmres_functions->CreateVector = CreateVector;
krylov/co-gmres.c:   cogmres_functions->CreateVectorArray = CreateVectorArray; /* not in PCGFunctionsCreate */
krylov/co-gmres.c:   cogmres_functions->DestroyVector = DestroyVector;
krylov/co-gmres.c:   cogmres_functions->MatvecCreate = MatvecCreate;
krylov/co-gmres.c:   cogmres_functions->Matvec = Matvec;
krylov/co-gmres.c:   cogmres_functions->MatvecDestroy = MatvecDestroy;
krylov/co-gmres.c:   cogmres_functions->InnerProd = InnerProd;
krylov/co-gmres.c:   cogmres_functions->CopyVector = CopyVector;
krylov/co-gmres.c:   cogmres_functions->ClearVector = ClearVector;
krylov/co-gmres.c:   cogmres_functions->ScaleVector = ScaleVector;
krylov/co-gmres.c:   cogmres_functions->Axpy = Axpy;
krylov/co-gmres.c:   cogmres_functions->precond_setup = PrecondSetup;
krylov/co-gmres.c:   cogmres_functions->precond       = Precond;
krylov/co-gmres.c:         (*(cogmres_functions->MatvecDestroy))(cogmres_data -> matvec_data);
krylov/co-gmres.c:         (*(cogmres_functions->DestroyVector))(cogmres_data -> r);
krylov/co-gmres.c:         (*(cogmres_functions->DestroyVector))(cogmres_data -> w);
krylov/co-gmres.c:         (*(cogmres_functions->DestroyVector))(cogmres_data -> w_2);
krylov/co-gmres.c:	       (*(cogmres_functions->DestroyVector))( (cogmres_data -> p) [i]);
krylov/co-gmres.c:   HYPRE_Int          (*precond_setup)(void*,void*,void*,void*) = (cogmres_functions->precond_setup);
krylov/co-gmres.c:	   (cogmres_data -> p) = (void**)(*(cogmres_functions->CreateVectorArray))(k_dim+1,x);
krylov/co-gmres.c:      (cogmres_data -> r) = (*(cogmres_functions->CreateVector))(b);
krylov/co-gmres.c:      (cogmres_data -> w) = (*(cogmres_functions->CreateVector))(b);
krylov/co-gmres.c:         (cogmres_data -> w_2) = (*(cogmres_functions->CreateVector))(b);
krylov/co-gmres.c:      (cogmres_data -> matvec_data) = (*(cogmres_functions->MatvecCreate))(A, x);
krylov/co-gmres.c:   (*(cogmres_functions->CommInfo))(A,&my_id,&num_procs);
krylov/co-gmres.c:   (*(cogmres_functions->CopyVector))(b,p[0]);
krylov/co-gmres.c:   (*(cogmres_functions->Matvec))(matvec_data,-1.0, A, x, 1.0, p[0]);
krylov/co-gmres.c:   b_norm = sqrt((*(cogmres_functions->InnerProd))(b,b));
krylov/co-gmres.c:   r_norm = sqrt((*(cogmres_functions->InnerProd))(p[0],p[0]));
krylov/co-gmres.c:              (*(cogmres_functions->CopyVector))(b,r);
krylov/co-gmres.c:              (*(cogmres_functions->Matvec))(matvec_data,-1.0,A,x,1.0,r);
krylov/co-gmres.c:              r_norm = sqrt((*(cogmres_functions->InnerProd))(r,r));
krylov/co-gmres.c:	(*(cogmres_functions->ScaleVector))(t,p[0]);
krylov/co-gmres.c:           (*(cogmres_functions->ClearVector))(r);
krylov/co-gmres.c:           (*(cogmres_functions->Matvec))(matvec_data, 1.0, A, r, 0.0, p[i]);
krylov/co-gmres.c:              hh[j][i-1] = (*(cogmres_functions->InnerProd))(p[j],p[i]);
krylov/co-gmres.c:              (*(cogmres_functions->Axpy))(-hh[j][i-1],p[j],p[i]);
krylov/co-gmres.c:           t = sqrt((*(cogmres_functions->InnerProd))(p[i],p[i]));
krylov/co-gmres.c:              (*(cogmres_functions->ScaleVector))(t,p[i]);
krylov/co-gmres.c:                 (*(cogmres_functions->CopyVector))(p[i-1],w);
krylov/co-gmres.c:                 (*(cogmres_functions->ScaleVector))(rs_2[i-1],w);
krylov/co-gmres.c:                    (*(cogmres_functions->Axpy))(rs_2[j], p[j], w);
krylov/co-gmres.c:                 (*(cogmres_functions->ClearVector))(r);
krylov/co-gmres.c:                 (*(cogmres_functions->CopyVector))(x,w);
krylov/co-gmres.c:                 (*(cogmres_functions->Axpy))(1.0,r,w);
krylov/co-gmres.c:                 x_norm = sqrt( (*(cogmres_functions->InnerProd))(w,w) );
krylov/co-gmres.c:                       (*(cogmres_functions->CopyVector))(w, r);
krylov/co-gmres.c:                       (*(cogmres_functions->Axpy))(-1.0, w_2, r);
krylov/co-gmres.c:                       (*(cogmres_functions->CopyVector))(w, w_2);
krylov/co-gmres.c:                       (*(cogmres_functions->CopyVector))(w, w_2);
krylov/co-gmres.c:                       (*(cogmres_functions->ClearVector))(w);
krylov/co-gmres.c:                       (*(cogmres_functions->Axpy))(rs_2[i-1], p[i-1], w);
krylov/co-gmres.c:                       (*(cogmres_functions->ClearVector))(r);
krylov/co-gmres.c:                    w_norm = sqrt( (*(cogmres_functions->InnerProd))(r,r) );
krylov/co-gmres.c:        (*(cogmres_functions->CopyVector))(p[i-1],w);
krylov/co-gmres.c:        (*(cogmres_functions->ScaleVector))(rs[i-1],w);
krylov/co-gmres.c:                (*(cogmres_functions->Axpy))(rs[j], p[j], w);
krylov/co-gmres.c:	(*(cogmres_functions->ClearVector))(r);
krylov/co-gmres.c:	(*(cogmres_functions->Axpy))(1.0,r,x);
krylov/co-gmres.c:           (*(cogmres_functions->CopyVector))(b,r);
krylov/co-gmres.c:           (*(cogmres_functions->Matvec))(matvec_data,-1.0,A,x,1.0,r);
krylov/co-gmres.c:           real_r_norm_new = r_norm = sqrt( (*(cogmres_functions->InnerProd))(r,r) );
krylov/co-gmres.c:                 x_norm = sqrt( (*(cogmres_functions->InnerProd))(x,x) );
krylov/co-gmres.c:                    (*(cogmres_functions->ClearVector))(w);
krylov/co-gmres.c:                    (*(cogmres_functions->Axpy))(rs[i-1], p[i-1], w);
krylov/co-gmres.c:                    (*(cogmres_functions->ClearVector))(r);
krylov/co-gmres.c:                    w_norm = sqrt( (*(cogmres_functions->InnerProd))(r,r) );
krylov/co-gmres.c:              (*(cogmres_functions->CopyVector))(r,p[0]);
krylov/co-gmres.c:        if (i) (*(cogmres_functions->Axpy))(rs[i]-1.0,p[i],p[i]);
krylov/co-gmres.c:           (*(cogmres_functions->Axpy))(rs[j],p[j],p[i]);
krylov/co-gmres.c:           (*(cogmres_functions->Axpy))(rs[0]-1.0,p[0],p[0]);
krylov/co-gmres.c:           (*(cogmres_functions->Axpy))(1.0,p[i],p[0]);
krylov/flexgmres.c:   fgmres_functions->CAlloc = CAlloc;
krylov/flexgmres.c:   fgmres_functions->Free = Free;
krylov/flexgmres.c:   fgmres_functions->CommInfo = CommInfo; /* not in PCGFunctionsCreate */
krylov/flexgmres.c:   fgmres_functions->CreateVector = CreateVector;
krylov/flexgmres.c:   fgmres_functions->CreateVectorArray = CreateVectorArray; /* not in PCGFunctionsCreate */
krylov/flexgmres.c:   fgmres_functions->DestroyVector = DestroyVector;
krylov/flexgmres.c:   fgmres_functions->MatvecCreate = MatvecCreate;
krylov/flexgmres.c:   fgmres_functions->Matvec = Matvec;
krylov/flexgmres.c:   fgmres_functions->MatvecDestroy = MatvecDestroy;
krylov/flexgmres.c:   fgmres_functions->InnerProd = InnerProd;
krylov/flexgmres.c:   fgmres_functions->CopyVector = CopyVector;
krylov/flexgmres.c:   fgmres_functions->ClearVector = ClearVector;
krylov/flexgmres.c:   fgmres_functions->ScaleVector = ScaleVector;
krylov/flexgmres.c:   fgmres_functions->Axpy = Axpy;
krylov/flexgmres.c:   fgmres_functions->precond_setup = PrecondSetup;
krylov/flexgmres.c:   fgmres_functions->precond       = Precond;
krylov/flexgmres.c:   fgmres_functions->modify_pc     = hypre_FlexGMRESModifyPCDefault;
krylov/flexgmres.c:         (*(fgmres_functions->MatvecDestroy))(fgmres_data -> matvec_data);
krylov/flexgmres.c:         (*(fgmres_functions->DestroyVector))(fgmres_data -> r);
krylov/flexgmres.c:         (*(fgmres_functions->DestroyVector))(fgmres_data -> w);
krylov/flexgmres.c:         (*(fgmres_functions->DestroyVector))(fgmres_data -> w_2);
krylov/flexgmres.c:	       (*(fgmres_functions->DestroyVector))( (fgmres_data -> p) [i]);
krylov/flexgmres.c:	       (*(fgmres_functions->DestroyVector))( (fgmres_data -> pre_vecs) [i]);
krylov/flexgmres.c:   HYPRE_Int          (*precond_setup)(void*,void*,void*,void*) = (fgmres_functions->precond_setup);
krylov/flexgmres.c:	   (fgmres_data -> p) = (void**)(*(fgmres_functions->CreateVectorArray))(k_dim+1,x);
krylov/flexgmres.c:      (fgmres_data -> r) = (*(fgmres_functions->CreateVector))(b);
krylov/flexgmres.c:      (fgmres_data -> w) = (*(fgmres_functions->CreateVector))(b);
krylov/flexgmres.c:         (fgmres_data -> w_2) = (*(fgmres_functions->CreateVector))(b);
krylov/flexgmres.c:   (fgmres_data -> pre_vecs) = (void**)(*(fgmres_functions->CreateVectorArray))(k_dim+1,x); 
krylov/flexgmres.c:      (fgmres_data -> matvec_data) = (*(fgmres_functions->MatvecCreate))(A, x);
krylov/flexgmres.c:   (*(fgmres_functions->CommInfo))(A,&my_id,&num_procs);
krylov/flexgmres.c:   (*(fgmres_functions->CopyVector))(b,p[0]);
krylov/flexgmres.c:   (*(fgmres_functions->Matvec))(matvec_data,-1.0, A, x, 1.0, p[0]);
krylov/flexgmres.c:   b_norm = sqrt((*(fgmres_functions->InnerProd))(b,b));
krylov/flexgmres.c:   r_norm = sqrt((*(fgmres_functions->InnerProd))(p[0],p[0]));
krylov/flexgmres.c:           (*(fgmres_functions->CopyVector))(b,r);
krylov/flexgmres.c:           (*(fgmres_functions->Matvec))(matvec_data,-1.0,A,x,1.0,r);
krylov/flexgmres.c:           r_norm = sqrt((*(fgmres_functions->InnerProd))(r,r));
krylov/flexgmres.c:        (*(fgmres_functions->ScaleVector))(t,p[0]);
krylov/flexgmres.c:           (*(fgmres_functions->ClearVector))(pre_vecs[i-1]);
krylov/flexgmres.c:           (*(fgmres_functions->Matvec))(matvec_data, 1.0, A, pre_vecs[i-1], 0.0, p[i]);
krylov/flexgmres.c:              hh[j][i-1] = (*(fgmres_functions->InnerProd))(p[j],p[i]);
krylov/flexgmres.c:              (*(fgmres_functions->Axpy))(-hh[j][i-1],p[j],p[i]);
krylov/flexgmres.c:           t = sqrt((*(fgmres_functions->InnerProd))(p[i],p[i]));
krylov/flexgmres.c:              (*(fgmres_functions->ScaleVector))(t,p[i]);
krylov/flexgmres.c:        (*(fgmres_functions->CopyVector))(pre_vecs[i-1],w);
krylov/flexgmres.c:        (*(fgmres_functions->ScaleVector))(rs[i-1],w);
krylov/flexgmres.c:           (*(fgmres_functions->Axpy))(rs[j], pre_vecs[j], w);
krylov/flexgmres.c:	(*(fgmres_functions->Axpy))(1.0,w,x);
krylov/flexgmres.c:           (*(fgmres_functions->CopyVector))(b,r);
krylov/flexgmres.c:           (*(fgmres_functions->Matvec))(matvec_data,-1.0,A,x,1.0,r);
krylov/flexgmres.c:           r_norm = sqrt( (*(fgmres_functions->InnerProd))(r,r) );
krylov/flexgmres.c:              (*(fgmres_functions->CopyVector))(r,p[0]);
krylov/flexgmres.c:        if (i) (*(fgmres_functions->Axpy))(rs[i]-1.0,p[i],p[i]);
krylov/flexgmres.c:           (*(fgmres_functions->Axpy))(rs[j],p[j],p[i]);
krylov/flexgmres.c:           (*(fgmres_functions->Axpy))(rs[0]-1.0,p[0],p[0]);
krylov/flexgmres.c:           (*(fgmres_functions->Axpy))(1.0,p[i],p[0]);
krylov/gmres.c:   gmres_functions->CAlloc = CAlloc;
krylov/gmres.c:   gmres_functions->Free = Free;
krylov/gmres.c:   gmres_functions->CommInfo = CommInfo; /* not in PCGFunctionsCreate */
krylov/gmres.c:   gmres_functions->CreateVector = CreateVector;
krylov/gmres.c:   gmres_functions->CreateVectorArray = CreateVectorArray; /* not in PCGFunctionsCreate */
krylov/gmres.c:   gmres_functions->DestroyVector = DestroyVector;
krylov/gmres.c:   gmres_functions->MatvecCreate = MatvecCreate;
krylov/gmres.c:   gmres_functions->Matvec = Matvec;
krylov/gmres.c:   gmres_functions->MatvecDestroy = MatvecDestroy;
krylov/gmres.c:   gmres_functions->InnerProd = InnerProd;
krylov/gmres.c:   gmres_functions->CopyVector = CopyVector;
krylov/gmres.c:   gmres_functions->ClearVector = ClearVector;
krylov/gmres.c:   gmres_functions->ScaleVector = ScaleVector;
krylov/gmres.c:   gmres_functions->Axpy = Axpy;
krylov/gmres.c:   gmres_functions->precond_setup = PrecondSetup;
krylov/gmres.c:   gmres_functions->precond       = Precond;
krylov/gmres.c:         (*(gmres_functions->MatvecDestroy))(gmres_data -> matvec_data);
krylov/gmres.c:         (*(gmres_functions->DestroyVector))(gmres_data -> r);
krylov/gmres.c:         (*(gmres_functions->DestroyVector))(gmres_data -> w);
krylov/gmres.c:         (*(gmres_functions->DestroyVector))(gmres_data -> w_2);
krylov/gmres.c:	       (*(gmres_functions->DestroyVector))( (gmres_data -> p) [i]);
krylov/gmres.c:   HYPRE_Int          (*precond_setup)(void*,void*,void*,void*) = (gmres_functions->precond_setup);
krylov/gmres.c:	   (gmres_data -> p) = (void**)(*(gmres_functions->CreateVectorArray))(k_dim+1,x);
krylov/gmres.c:      (gmres_data -> r) = (*(gmres_functions->CreateVector))(b);
krylov/gmres.c:      (gmres_data -> w) = (*(gmres_functions->CreateVector))(b);
krylov/gmres.c:         (gmres_data -> w_2) = (*(gmres_functions->CreateVector))(b);
krylov/gmres.c:      (gmres_data -> matvec_data) = (*(gmres_functions->MatvecCreate))(A, x);
krylov/gmres.c:   (*(gmres_functions->CommInfo))(A,&my_id,&num_procs);
krylov/gmres.c:   (*(gmres_functions->CopyVector))(b,p[0]);
krylov/gmres.c:   (*(gmres_functions->Matvec))(matvec_data,-1.0, A, x, 1.0, p[0]);
krylov/gmres.c:   b_norm = sqrt((*(gmres_functions->InnerProd))(b,b));
krylov/gmres.c:   r_norm = sqrt((*(gmres_functions->InnerProd))(p[0],p[0]));
krylov/gmres.c:              (*(gmres_functions->CopyVector))(b,r);
krylov/gmres.c:              (*(gmres_functions->Matvec))(matvec_data,-1.0,A,x,1.0,r);
krylov/gmres.c:              r_norm = sqrt((*(gmres_functions->InnerProd))(r,r));
krylov/gmres.c:	(*(gmres_functions->ScaleVector))(t,p[0]);
krylov/gmres.c:           (*(gmres_functions->ClearVector))(r);
krylov/gmres.c:           (*(gmres_functions->Matvec))(matvec_data, 1.0, A, r, 0.0, p[i]);
krylov/gmres.c:              hh[j][i-1] = (*(gmres_functions->InnerProd))(p[j],p[i]);
krylov/gmres.c:              (*(gmres_functions->Axpy))(-hh[j][i-1],p[j],p[i]);
krylov/gmres.c:           t = sqrt((*(gmres_functions->InnerProd))(p[i],p[i]));
krylov/gmres.c:              (*(gmres_functions->ScaleVector))(t,p[i]);
krylov/gmres.c:                 (*(gmres_functions->CopyVector))(p[i-1],w);
krylov/gmres.c:                 (*(gmres_functions->ScaleVector))(rs_2[i-1],w);
krylov/gmres.c:                    (*(gmres_functions->Axpy))(rs_2[j], p[j], w);
krylov/gmres.c:                 (*(gmres_functions->ClearVector))(r);
krylov/gmres.c:                 (*(gmres_functions->CopyVector))(x,w);
krylov/gmres.c:                 (*(gmres_functions->Axpy))(1.0,r,w);
krylov/gmres.c:                 x_norm = sqrt( (*(gmres_functions->InnerProd))(w,w) );
krylov/gmres.c:                       (*(gmres_functions->CopyVector))(w, r);
krylov/gmres.c:                       (*(gmres_functions->Axpy))(-1.0, w_2, r);
krylov/gmres.c:                       (*(gmres_functions->CopyVector))(w, w_2);
krylov/gmres.c:                       (*(gmres_functions->CopyVector))(w, w_2);
krylov/gmres.c:                       (*(gmres_functions->ClearVector))(w);
krylov/gmres.c:                       (*(gmres_functions->Axpy))(rs_2[i-1], p[i-1], w);
krylov/gmres.c:                       (*(gmres_functions->ClearVector))(r);
krylov/gmres.c:                    w_norm = sqrt( (*(gmres_functions->InnerProd))(r,r) );
krylov/gmres.c:        (*(gmres_functions->CopyVector))(p[i-1],w);
krylov/gmres.c:        (*(gmres_functions->ScaleVector))(rs[i-1],w);
krylov/gmres.c:                (*(gmres_functions->Axpy))(rs[j], p[j], w);
krylov/gmres.c:	(*(gmres_functions->ClearVector))(r);
krylov/gmres.c:	(*(gmres_functions->Axpy))(1.0,r,x);
krylov/gmres.c:           (*(gmres_functions->CopyVector))(b,r);
krylov/gmres.c:           (*(gmres_functions->Matvec))(matvec_data,-1.0,A,x,1.0,r);
krylov/gmres.c:           real_r_norm_new = r_norm = sqrt( (*(gmres_functions->InnerProd))(r,r) );
krylov/gmres.c:                 x_norm = sqrt( (*(gmres_functions->InnerProd))(x,x) );
krylov/gmres.c:                    (*(gmres_functions->ClearVector))(w);
krylov/gmres.c:                    (*(gmres_functions->Axpy))(rs[i-1], p[i-1], w);
krylov/gmres.c:                    (*(gmres_functions->ClearVector))(r);
krylov/gmres.c:                    w_norm = sqrt( (*(gmres_functions->InnerProd))(r,r) );
krylov/gmres.c:              (*(gmres_functions->CopyVector))(r,p[0]);
krylov/gmres.c:        if (i) (*(gmres_functions->Axpy))(rs[i]-1.0,p[i],p[i]);
krylov/gmres.c:           (*(gmres_functions->Axpy))(rs[j],p[j],p[i]);
krylov/gmres.c:           (*(gmres_functions->Axpy))(rs[0]-1.0,p[0],p[0]);
krylov/gmres.c:           (*(gmres_functions->Axpy))(1.0,p[i],p[0]);
krylov/lgmres.c:   lgmres_functions->CAlloc = CAlloc;
krylov/lgmres.c:   lgmres_functions->Free = Free;
krylov/lgmres.c:   lgmres_functions->CommInfo = CommInfo; /* not in PCGFunctionsCreate */
krylov/lgmres.c:   lgmres_functions->CreateVector = CreateVector;
krylov/lgmres.c:   lgmres_functions->CreateVectorArray = CreateVectorArray; /* not in PCGFunctionsCreate */
krylov/lgmres.c:   lgmres_functions->DestroyVector = DestroyVector;
krylov/lgmres.c:   lgmres_functions->MatvecCreate = MatvecCreate;
krylov/lgmres.c:   lgmres_functions->Matvec = Matvec;
krylov/lgmres.c:   lgmres_functions->MatvecDestroy = MatvecDestroy;
krylov/lgmres.c:   lgmres_functions->InnerProd = InnerProd;
krylov/lgmres.c:   lgmres_functions->CopyVector = CopyVector;
krylov/lgmres.c:   lgmres_functions->ClearVector = ClearVector;
krylov/lgmres.c:   lgmres_functions->ScaleVector = ScaleVector;
krylov/lgmres.c:   lgmres_functions->Axpy = Axpy;
krylov/lgmres.c:   lgmres_functions->precond_setup = PrecondSetup;
krylov/lgmres.c:   lgmres_functions->precond       = Precond;
krylov/lgmres.c:         (*(lgmres_functions->MatvecDestroy))(lgmres_data -> matvec_data);
krylov/lgmres.c:         (*(lgmres_functions->DestroyVector))(lgmres_data -> r);
krylov/lgmres.c:         (*(lgmres_functions->DestroyVector))(lgmres_data -> w);
krylov/lgmres.c:         (*(lgmres_functions->DestroyVector))(lgmres_data -> w_2);
krylov/lgmres.c:	       (*(lgmres_functions->DestroyVector))( (lgmres_data -> p) [i]);
krylov/lgmres.c:	       (*(lgmres_functions->DestroyVector))( (lgmres_data -> aug_vecs) [i]);
krylov/lgmres.c:	       (*(lgmres_functions->DestroyVector))( (lgmres_data -> a_aug_vecs) [i]);
krylov/lgmres.c:   HYPRE_Int          (*precond_setup)(void*,void*,void*,void*) = (lgmres_functions->precond_setup);
krylov/lgmres.c:	   (lgmres_data -> p) = (void**)(*(lgmres_functions->CreateVectorArray))(k_dim+1,x);
krylov/lgmres.c:      (lgmres_data -> r) = (*(lgmres_functions->CreateVector))(b);
krylov/lgmres.c:      (lgmres_data -> w) = (*(lgmres_functions->CreateVector))(b);
krylov/lgmres.c:         (lgmres_data -> w_2) = (*(lgmres_functions->CreateVector))(b);
krylov/lgmres.c:      (lgmres_data -> aug_vecs) = (void**)(*(lgmres_functions->CreateVectorArray))(aug_dim+1,x); /* one extra */
krylov/lgmres.c:      (lgmres_data -> a_aug_vecs) = (void**)(*(lgmres_functions->CreateVectorArray))(aug_dim,x);
krylov/lgmres.c:      (lgmres_data -> matvec_data) = (*(lgmres_functions->MatvecCreate))(A, x);
krylov/lgmres.c:   (*(lgmres_functions->CommInfo))(A,&my_id,&num_procs);
krylov/lgmres.c:   (*(lgmres_functions->CopyVector))(b,p[0]);
krylov/lgmres.c:   (*(lgmres_functions->Matvec))(matvec_data,-1.0, A, x, 1.0, p[0]);
krylov/lgmres.c:   b_norm = sqrt((*(lgmres_functions->InnerProd))(b,b));
krylov/lgmres.c:   r_norm = sqrt((*(lgmres_functions->InnerProd))(p[0],p[0]));
krylov/lgmres.c:           (*(lgmres_functions->CopyVector))(b,r);
krylov/lgmres.c:           (*(lgmres_functions->Matvec))(matvec_data,-1.0,A,x,1.0,r);
krylov/lgmres.c:           r_norm = sqrt((*(lgmres_functions->InnerProd))(r,r));
krylov/lgmres.c:        (*(lgmres_functions->ScaleVector))(t,p[0]);
krylov/lgmres.c:           (*(lgmres_functions->ClearVector))(r);
krylov/lgmres.c:              (*(lgmres_functions->Matvec))(matvec_data, 1.0, A, r, 0.0, p[i]);
krylov/lgmres.c:              (*(lgmres_functions->CopyVector))(a_aug_vecs[spot],p[i]);
krylov/lgmres.c:              hh[j][i-1] = (*(lgmres_functions->InnerProd))(p[j],p[i]);
krylov/lgmres.c:              (*(lgmres_functions->Axpy))(-hh[j][i-1],p[j],p[i]);
krylov/lgmres.c:           t = sqrt((*(lgmres_functions->InnerProd))(p[i],p[i]));
krylov/lgmres.c:              (*(lgmres_functions->ScaleVector))(t,p[i]);
krylov/lgmres.c:           (*(lgmres_functions->CopyVector))(p[i-1],w);
krylov/lgmres.c:           (*(lgmres_functions->ScaleVector))(rs[i-1],w);
krylov/lgmres.c:              (*(lgmres_functions->Axpy))(rs[j], p[j], w);
krylov/lgmres.c:           (*(lgmres_functions->CopyVector))(p[0],w);
krylov/lgmres.c:           (*(lgmres_functions->ScaleVector))(rs[0],w);
krylov/lgmres.c:              (*(lgmres_functions->Axpy))(rs[j], p[j], w);
krylov/lgmres.c:              (*(lgmres_functions->Axpy))(rs[it_arnoldi+ii], aug_vecs[spot], w);
krylov/lgmres.c:        (*(lgmres_functions->CopyVector))(w,aug_vecs[aug_dim]);
krylov/lgmres.c:	(*(lgmres_functions->ClearVector))(r);
krylov/lgmres.c:	(*(lgmres_functions->Axpy))(1.0,r,x);
krylov/lgmres.c:           (*(lgmres_functions->CopyVector))(b,r);
krylov/lgmres.c:           (*(lgmres_functions->Matvec))(matvec_data,-1.0,A,x,1.0,r);
krylov/lgmres.c:           r_norm = sqrt( (*(lgmres_functions->InnerProd))(r,r) );
krylov/lgmres.c:              (*(lgmres_functions->CopyVector))(r,p[0]);
krylov/lgmres.c:	(*(lgmres_functions->CopyVector))(p[0],w);
krylov/lgmres.c:	(*(lgmres_functions->ScaleVector))(r_norm_last,w);
krylov/lgmres.c:        if (i) (*(lgmres_functions->Axpy))(rs[i]-1.0,p[i],p[i]);
krylov/lgmres.c:           (*(lgmres_functions->Axpy))(rs[j],p[j],p[i]);
krylov/lgmres.c:           (*(lgmres_functions->Axpy))(rs[0]-1.0,p[0],p[0]);
krylov/lgmres.c:           (*(lgmres_functions->Axpy))(1.0,p[i],p[0]);
krylov/lgmres.c:           (*(lgmres_functions->CopyVector))(aug_vecs[aug_dim], aug_vecs[spot]);
krylov/lgmres.c:           tmp_norm = sqrt((*(lgmres_functions->InnerProd))(aug_vecs[spot], aug_vecs[spot]));
krylov/lgmres.c:           (*(lgmres_functions->ScaleVector))(tmp_norm ,aug_vecs[spot]);
krylov/lgmres.c:           (*(lgmres_functions->CopyVector))( w, a_aug_vecs[spot]);
krylov/lgmres.c:           (*(lgmres_functions->ScaleVector))(- 1.0, a_aug_vecs[spot]); /* -r0*/
krylov/lgmres.c:           (*(lgmres_functions->Axpy))(1.0, p[0],a_aug_vecs[spot]); /* rm - r0 */
krylov/lgmres.c:           (*(lgmres_functions->ScaleVector))(-tmp_norm, a_aug_vecs[spot]); /* r0-rm /norm */
